@namespace C64.FrontEnd.Pages

@inject Microsoft.AspNetCore.Http.HttpContextAccessor httpContext
@inject IUnitOfWork unitOfWork
@inject NavigationManager navigationManager
@inject IToastService toastService

<BootstrapModal @ref="bootstrapModal" Title="Add new news" Size="BootstrapModal.ModalSize.Large">
    <Content>
        <EditForm Model="addNewsModel" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Title:</label>
                <div>
                    <InputText class="form-control" @bind-Value="@addNewsModel.Title" />
                    <ValidationMessage For="@(() => addNewsModel.Title)" />
                </div>
            </div>
            <div class="form-group">
                <label>Content (Markdown is ok):</label>
                <div>
                    <InputTextArea rows="5" class="form-control" @bind-Value="@addNewsModel.Content" />
                    <ValidationMessage For="@(() => addNewsModel.Title)" />
                </div>
            </div>
            <button class="btn btn-primary" type="submit">Add News</button>

            <div class="form-group mt-4">
                <label>Preview:</label>
                <div>
                    <RenderMarkdown MarkdownContent="@addNewsModel.Content"></RenderMarkdown>
                </div>
            </div>
        </EditForm>
    </Content>
</BootstrapModal>

@code {

    private AddNewsModel addNewsModel = new AddNewsModel();
    private BootstrapModal bootstrapModal;

    protected override void OnInitialized()
    {
        var allowed = httpContext.HttpContext.CheckRole("Moderator");
        if (!allowed)
            throw new UnauthorizedAccessException("Insuffiencts rights");
    }

    private async Task OnValidSubmit()
    {
        var siteNews = new SiteInfo()
        {
            PublishedAt = DateTime.Now,
            Show = true,
            Text = addNewsModel.Content,
            Title = addNewsModel.Title,
            UserId = httpContext.HttpContext.GetUserId()
        };

        unitOfWork.SiteInfos.Add(siteNews);

        await unitOfWork.Commit();

        toastService.ShowSuccess("News has been added, you might have to reload to see the change");

        navigationManager.NavigateTo("/");
    }

    private class AddNewsModel
    {
        [System.ComponentModel.DataAnnotations.Required]
        public string Title { get; set; }

        [System.ComponentModel.DataAnnotations.Required]
        public string Content { get; set; }
    }

}