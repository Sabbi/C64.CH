@namespace C64.FrontEnd.Pages

@inject IModalService modal
@inject IUnitOfWork unitOfWork

@if (ProductionFiles.Any(p => p.Show))
{
    @foreach (var download in ProductionFiles.Where(p => p.Show))
    {
        <DownloadProduction ProductionFile="@download" />
        @if (download.IsArchive)
        {
            <p>
                <a href="" @onclick="(() => ShowFileContents(download.ProductionFileId, download.Filename))" @onclick:preventDefault><i class="far fa-list-alt"></i> Show File-Contents</a>
            </p>
            <p>
                <a href="" @onclick="(() => StartEmulator(download.ProductionFileId))" @onclick:preventDefault><i class="fas fa-gamepad"></i> Emulate in Browser (Experimental)</a>
            </p>
        }
        <hr />
    }
}
else
{
    <p>Sorry, no downloads yet</p>
}

@code {
    [Parameter]
    public ICollection<ProductionFile> ProductionFiles { get; set; }

    private void ShowFileContents(int productionFileId, string productionFilename)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(FileContents.ProductionFileId), productionFileId);
        parameters.Add(nameof(FileContents.ProductionFilename), productionFilename);

        modal.Show<FileContents>("Contents of " + productionFilename, parameters);
    }

    private async Task StartEmulator(int productionFileId)
    {
        var productionFile = await unitOfWork.Productions.GetFile(productionFileId);

        var parameters = new ModalParameters();
        parameters.Add(nameof(EmuModal.ProductionFile), productionFile);
        var reference = modal.Show<EmuModal>("", parameters);
    }
}