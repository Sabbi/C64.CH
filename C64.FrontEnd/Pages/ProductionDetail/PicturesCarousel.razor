@namespace C64.FrontEnd.Pages

@if (ProductionPictures.Count(p => p.Show) == 1 && !ProductionVideos.Any())
{
    <a data-fslightbox href="/data/productionpictures/@ProductionPictures.FirstOrDefault(p => p.Show).Filename"><img class="d-block w-100" src="/data/productionpictures/@ProductionPictures.FirstOrDefault(p => p.Show).Filename" alt="@ProductionPictures.FirstOrDefault(p => p.Show).Filename"></a>
}
else if (!ProductionPictures.Any() && !ProductionVideos.Any())
{
    <img class="d-block w-100" src="/images/nopicture.jpg" alt="Sorry, no screenshot / picture yet">
}
else
{
    <div id="carousel1" class="carousel slide" data-ride="carousel">
        <div class="carousel-inner">
            @foreach (var picture in ProductionPicturesSorted.Where(p => p.Show))
            {
                if (picture == ProductionPicturesSorted.FirstOrDefault(p => p.Show))
                {
                    <div class="carousel-item active" @key="picture.Filename">
                        <a data-fslightbox href="/data/productionpictures/@picture.Filename"><img class="d-block w-100" src="/data/productionpictures/@picture.Filename" alt="@picture.Filename"></a>
                    </div>
                }
                else
                {
                    <div class="carousel-item @(picture == ProductionPicturesSorted.FirstOrDefault(p => p.Show) ? " active" : string.Empty)" @key="picture.Filename">
                        <a data-fslightbox href="/data/productionpictures/@picture.Filename"><img class="d-block w-100 h-100" img="505050505.jpg" data-lazy-load-src="/data/productionpictures/@picture.Filename" alt="@picture.Filename"></a>
                    </div>
                }
            }
            @foreach (var video in ProductionVideos.OrderBy(p => p.Sort).Where(p => p.Show))
            {
                var provider = video.Provider();
                <div class="carousel-item carousel-video" data-id="@video.ProductionVideoId">
                    <a data-fslightbox href="@provider.VideoUrl()">
                        <img class="d-block w-100 h-100" img="505050505.jpg" data-lazy-load-src="@provider.ThumbnailUrlHq()" alt="Video for @ProductionName">
                        <i class="icon-play full fas fa-play-circle" title="Video"></i>
                    </a>
                </div>
            }
        </div>
        <a class="carousel-control-prev" id="carouselExampleIndicators-prev" href="#carousel1" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" id="carouselExampleIndicators-next" href="#carousel1" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
    <div class="row ">
        <div class="col-12">
            <div class="row m-0">
                @{ var counter = 0; }
                @foreach (var picture in ProductionPicturesSorted.Where(p => p.Show))
                {
                    <div class="col-2 m-0 p-1">
                        <img data-target="#carousel1" data-slide-to="@counter" class="slidethumb @(picture == ProductionPictures.FirstOrDefault(p => p.Show) ? " active" : "" ) w-100" src="/data/thumbnails/85x60/@picture.Filename" />
                    </div>
                    counter++;
                }
                @foreach (var video in ProductionVideos.OrderBy(p => p.Sort).Where(p => p.Show))
                {
                    var provider = video.Provider();
                    <div class="col-2 m-0 p-1">
                        <img data-target="#carousel1" data-slide-to="@counter" class="slidethumb w-100" src="@provider.ThumbnailUrl()" />
                        <i class="icon-play thumb fas fa-play-circle" title="Video"></i>
                    </div>
                    counter++;
                }
            </div>
        </div>
    </div>
}

@code
{
    [Parameter]
    public IEnumerable<ProductionPicture> ProductionPictures { get; set; }

    [Parameter]
    public IEnumerable<ProductionVideo> ProductionVideos { get; set; }

    [Parameter]
    public string ProductionName { get; set; }

    private IEnumerable<ProductionPicture> ProductionPicturesSorted => ProductionPictures.OrderBy(p => p.Sort).ToList();

}