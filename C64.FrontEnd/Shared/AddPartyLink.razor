@inject IModalService Modal
@inject IUnitOfWork unitOfWork
@inject IToastService toastService

@inject NavigationManager navigationManager

<a href="" @attributes="@AllOtherAttributes" @onclick="OpenAddPartyModal" @onclick:preventDefault>
    @Content
</a>

@code{
    [Parameter]
    public RenderFragment Content { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> AllOtherAttributes { get; set; }

    private async Task OpenAddPartyModal()
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(AddPartyModal.unitOfWork), unitOfWork);
        var reference = Modal.Show<AddPartyModal>("", parameters);
        var result = await reference.Result;

        if (!result.Cancelled)
        {
            var party = (Party)result.Data;
            toastService.ShowSuccess($"Party {party.Name} added");
            navigationManager.NavigateTo($"/parties/{party.PartyId}/{party.Name.UrlEncode()}");
        }
    }
}